<?xml version="1.0"?>
<project name="gradeapp" default="build" basedir=".">

     <!-- Holds a list of all of the 'main' project's dependencies -->
     <path id="lib.path">
       <fileset dir=".">
         <include name="lib/*.jar" />
       </fileset>
     </path>

    <!-- build the program -->
    <target name="build" depends="compile,test" />

    <!-- Create Jar Files -->
    <target name="jar" depends="compile" description="Builds the jar'd version of GradeApp">
	<mkdir dir="dist" />
	<jar jarfile="dist/GradeApp.jar" index="true">
	    <fileset dir="bin/main"/>
	    <manifest>
		<attribute name="Implementation-Vendor" value="Software Engineering 'Desktop Application' Group"/>
		<attribute name="Main-Class" value="gradeapp.GradeApp" />
	    </manifest>
	</jar>
    </target>

    <!-- Basic simple clean target -->
    <target name="clean">
        <delete dir="bin"/>
    </target>

    <!-- make our binaries -->
     <target name="compile">
           <mkdir dir="bin" />
           <mkdir dir="bin/main" />
           <mkdir dir="bin/test" />
	   <mkdir dir="bin/examples" />
	   <javac srcdir="src/main" destdir="bin/main" classpathref="lib.path" debug="on" source="6" />
	   <javac srcdir="src/test" destdir="bin/test" classpathref="lib.path" debug="on" source="6" />
	   <javac srcdir="src/examples" destdir="bin/examples" debug="on" source="6" >
           <classpath>
                <path refid="lib.path" />
                <path location="bin/main" />
           </classpath>
       </javac>
     </target>

    <!-- run junit to test the program -->
    <target name="test" >
        <junit>
            <classpath>
                 <path refid="lib.path"/>
                 <path location="bin/main"/>
                 <path location="bin/test" />
            </classpath>
	    <formatter type="brief" usefile="false" />
	    <batchtest >
	      <fileset dir="bin/test" includes="**/*.class" />
	    </batchtest>
        </junit>
    </target>

    <!--- target to run the program -->
    <target name="run" depends="build">
        <java fork="true" classname="gradeapp.GradeApp" >
            <classpath>
                <path refid="lib.path"/>
                <path location="bin/main"/>
            </classpath>
        </java>
    </target>
    
    <!-- The following are targets to run a bunch of the examples -->
    <!-- to make your own, copy the following xml... -->
    <!--
        <target name="the name that you like" depends="build">
          <java fork="true" classname="the class name of your example" >
            <classpath>
                <path refid="lib.path"/>
                <path location="bin/main"/>
                <path location="bin/examples"/>
            </classpath>
          </java>
        </target>
    -->
 
    <!-- Example program that explores some HSSF excel magic
     You probably want to read the source first to see what it does -->
    <target name="example-excel" depends="build">
      <java fork="true" classname="excel.ExcelExample" >
            <classpath>
                <path refid="lib.path"/>
                <path location="bin/main"/>
                <path location="bin/examples"/>
            </classpath>
        </java>
    </target>

    <target name="example-graph" depends="build">
        <java fork="true" classname="graph.GraphTest">
                <classpath>
                    <path refid="lib.path"/>
                    <path location="bin/main"/>
                    <path location="bin/examples"/>
                </classpath>
        </java>
    </target>	

    <target name="example-save" depends="build">
      <java fork="true" classname="graph.SaveTest" >
        <classpath>
            <path refid="lib.path"/>
            <path location="bin/main"/>
            <path location="bin/examples"/>
        </classpath>
      </java>
    </target>

    <target name="example-print" depends="build">
      <java fork="true" classname="graph.PrintTest" >
        <classpath>
            <path refid="lib.path"/>
            <path location="bin/main"/>
            <path location="bin/examples"/>
        </classpath>
      </java>
    </target>

    <target name="example-email" depends="build">
      <java fork="true" classname="email.EmailTest" >
        <classpath>
            <path refid="lib.path"/>
            <path location="bin/main"/>
            <path location="bin/examples"/>
        </classpath>
      </java>
    </target>


    <!-- create documention from the source code -->
    <target name="doc">
        <javadoc packagenames="gradeapp.*" sourcepath="src/main" destdir="doc" />
    </target>

    <!-- Build exe for Windows, Lifted from: http://launch4j.sourceforge.net/docs.html -->
    <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="lib/launch4j/launch4j.jar:lib/launch4j/xstream.jar"/>
    <target name="build-windows" depends="jar">
	<mkdir dir="dist/windows"/>
	<launch4j configFile="lib/launch4j/gradeappconfig.xml" />
    </target>

    <!-- Use this target to bring up the GUI used to the edit the gradeappconfig.xml -->
    <target name="config-windows">
	<java jar="lib/launch4j/launch4j.jar" fork="true" />
    </target>	

</project>
