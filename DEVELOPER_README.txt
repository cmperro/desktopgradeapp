===========================================
       HOW TO USE THIS CHUNK OF FILES
===========================================

----------- File Structure --------------------------

bin - holds the binary classes (Generated by Ant)
build.xml - Ant build file, defines how to build, package create javadoc, package for delivery, etc..... (LOOK AT THIS FILE)
design - See data about the design of Grade App
DEVELOPER_README.txt - You're reading this dummy.
dist - The folder that contains the files that needs to be delivered to the customer (Generated by Ant)
doc - the javadoc for Gradeapp (Generated by Ant)
GradeApp.zip - the customer deliverable (Generated by Ant)
lib - the libraries used by GradeApp
misc - random documentation and files that we used to make this app
nbproject - the Netbeans project folder (DO NOT MESS WITH THIS)
README.txt - the readme that is delivered to the customer in the zip file
sampledata - a collection of sample data used
src - holds all of the source code that we wrote
.eclipse - the eclipse project directory (DO NOT MESS WITH THIS)

---------------SOURCE CONTROL--------------------------
We use git-hub http://github.com/sbadame/desktopgradeapp

---------------BUILD SYSTEM ----------------------------
The build system used is ANT. If you use an IDE I don't
think that you need to install it. If you wish to build using
the command line. Then you need to install it.
On Ubuntu/Debian: sudo apt-get install ant
ON Windows: http://ant.apache.org/bindownload.cgi
Reading through build.xml (Atleast the comment at the very top)
would be very useful to get a quick idea how the projec is structured

-------------- TEST ------------------------------------
Although no tests were implemented, JUnit is ready for testing.
Look at build.xml's "test" target for more info.

--------------- IDE ------------------------------------
- This folder is both a Netbeans AND Eclipse project.
   Since Netbeans was used to generate the UI, and is more intune with the ANT build system, it is probably a better fit.
   But Andres did all of his work in eclipse, so don't be discouraged from using it.

	Netbeans: download -> http://netbeans.org/downloads/
	Install it, run it
	File -> Open project->Select the directory that this file is in
	You now have the project. 

	Eclipse: download -> http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/galileo/SR1/eclipse-java-galileo-SR1-win32.zip
	Unzip it.
	File->Import->General->Existing projects into workspace->Next
	This directory is the root directory 
	dekstopgradeapp should be one of the projects available, click finish
	You now have a project.

	Don't like either of these IDEs? No problem, the build system used is ANT so even TextPad or VIM can do work.


---------------- LIBRARIES -------------------------------

jgraph.jar - Draws the graph for us
junit-4.6.jar - tests our code (too bad we never wrote any tests)
launch4j - creates a windows executable for our code
mail.jar - emails our picture
poi-3.6-20091214.jar - lets us read excel files


Once you have the code you can run "ant dist" to build a version of the binaries ready for distribution. The zip file will be 
in this directory called: "GradeApp.zip"
